CS 3377 System Prog. in Unix and other Envs.
Assignment 2
Due: Tuesday, Sep 6:  11:59 PM (on elearning).

For this assignment, you will write two (complex) commands. In a given text file, you need to find the 10 most frequently used words and 10 least frequently used words. Once you write a command to find 10 most frequently used words, you can easily tweak the command to find the 10 least frequently used words. 
You may have to use xargs, grep, sort, and several other commands to solve these problems. Note that each problem can be solved using combination of multiple commands; but all these commands should be in a single line (of any length).
For example,
	sort ypages > out
	uniq out
is not a single line command. Whereas the following is a single line command.
	sort ypages | uniq

You should write two single line commands for the two problems.

While counting the frequency you should ignore these words: 'the', 'an', 'a', 'of', and 'and'. Do not use grep multiple times for this.
Also, while comparing/matching the words ignore the difference in cases. 

Use the file 'story.txt' in shared box folder as input. You can either download this to cs1/cs2, or use copy and paste.
	
Login to cs1/cs2/cs3. Execute the following operations and submit the screenshot of the output on elearning.
1. Execute whoami
2. Execute the command to find 10 most frequently used words
3. Execute the command to find 10 least frequently used words
	
Practice Problem (no need to submit)
To solve this problem you have to learn a bit by yourself. Read about 'find' command. I strongly recommend reading the section on 'find' in Sobell's book. Also, look at the man page for find. Understand some examples shown and try them.

This problem has two parts. Complete both the parts.

1. One of the questions you may be asked in your job interview is the total number of lines of 'C' code you have written. You may have written C programs in many courses you have taken, and they will be in different sub-directories. You can manually look for each .c file and count the number of lines. But as a CS/SE major you need to do better than this. You need to write a command that finds the total number of lines of all the .c files under the current directory and subdirectories below it. 
The testcase you will use is ~sxa173731/3377/xv6.tar.gz. Copy this to your local directory and extract it. (See man page on tar.) You will see xv6 directory and there are several .c files in subdirectories under it. Your command should find the total of lines of all the .c files under xv6 dir. (The total number of lines is 7422.)

2. Next, you will write a command to find the 5 largest files under xv6 dir. Note that you should not consider directories. Otherwise, the output may be erroneous. 
	
	
Hint: You need to use find (surprise!). You can ignore the option part of find command. Look carefully at "-exec". Also, look at option for ls that returns the size of the file. Other commands that will be useful are sort, cat, tail/head.